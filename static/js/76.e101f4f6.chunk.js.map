{"version":3,"file":"static/js/76.e101f4f6.chunk.js","mappings":"kOACA,GAAgB,eAAiB,qCAAqC,SAAW,+BAA+B,KAAO,2BAA2B,OAAS,8B,mCCkF3J,EA7EoB,WAClB,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,GADeC,EAAAA,EAAAA,IAAS,sBAAtBC,SACaC,MAAM,oBAAoB,GAgB/C,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACYC,EAAAA,EAAAA,IAAgBZ,GAD5B,OACTa,EADS,OAGfd,EAASc,GAHM,2CAAH,qDAMdF,GACD,GAAE,CAACX,KAOF,iBAAKc,UAAWC,EAAAA,UAAhB,UACIjB,GAGA,4BACE,mBAAQkB,KAAK,SAASC,QAV9B,WACEf,GAAS,EACV,EAQmDY,UAAWC,EAAAA,OAAvD,sBACA,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBACEG,IACEpB,EAAMqB,YACFC,EAAAA,GAAYtB,EAAMqB,YADtB,0DAIFE,IAAKvB,EAAMwB,MACXC,MAAM,GACNC,OAAO,QAIX,4BACE,wBAAK1B,EAAMwB,SACX,mDAAyC,GAArBxB,EAAM2B,cAAmBC,QAAQ,IAArD,QACA,sCACA,iCAAO5B,EAAM6B,aACb,oCACA,iCAAO7B,EAAM8B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,oBAxBxD,gBAAKlB,UAAWC,EAAAA,SAAhB,iCA6BF,mBACA,mDACA,4BACE,SAAC,KAAD,CACEkB,GAAI,CAAEzB,SAAS,GAAD,OAAKF,EAAL,UACdQ,UAAWC,EAAAA,KACXmB,MAAO,CAAC9B,SAAAA,GAAW+B,SAAO,EAH5B,mBAOA,SAAC,KAAD,CACEF,GAAI,CAAEzB,SAAS,GAAD,OAAKF,EAAL,aACdQ,UAAWC,EAAAA,KACXmB,MAAO,CAAC9B,SAAAA,GAAW+B,SAAO,EAH5B,yBAQF,SAAC,KAAD,MAGL,C,sNC/EDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHjB,EAAY,kCAEZkB,EAAY,mCAAG,WAAOC,GAAP,kFAClBC,EADkB,+BACcH,EADd,4DACyEE,GADzE,SAEOH,EAAAA,EAAAA,IAAUI,GAFjB,uBAEVC,EAFU,EAEhBC,KAFgB,kBAGjBD,GAHiB,2CAAH,sDAMV7B,EAAe,mCAAG,WAAOZ,GAAP,kFACvBwC,EADuB,gBACNxC,EADM,qBACcqC,EADd,4BAECD,EAAAA,EAAAA,IAAUI,GAFX,uBAEf1C,EAFe,EAErB4C,KAFqB,kBAGtB5C,GAHsB,2CAAH,sDAMf6C,EAAiB,mCAAG,+FACzBH,EADyB,qCACaH,GADb,SAEAD,EAAAA,EAAAA,IAAUI,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,qDAMjBG,EAAY,mCAAG,WAAO5C,GAAP,kFACpBwC,EADoB,gBACHxC,EADG,4BACwBqC,EADxB,4BAEHD,EAAAA,EAAAA,IAAUI,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZG,EAAU,mCAAG,WAAO7C,GAAP,kFAClBwC,EADkB,gBACDxC,EADC,4BAC0BqC,EAD1B,4BAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","utils/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetails_movieContainer__uivPc\",\"movieImg\":\"MovieDetails_movieImg__B2Jy1\",\"link\":\"MovieDetails_link__coFQG\",\"button\":\"MovieDetails_button__9VA3h\"};","import { useState, useEffect } from 'react';\nimport styles from './MovieDetails.module.css'\nimport {useParams, useNavigate, useMatch, NavLink, useLocation, Outlet} from 'react-router-dom';\nimport { getMovieDetails, IMAGE_URL } from '../../utils/API';\n\n\nconst MovieDetails =()=> {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const history = useNavigate();\n  const location = useLocation();\n  const { pathname } = useMatch(\"/movies/:movieId/*\");\n  const url = pathname.match(/^(\\/movies\\/\\d+)/)[1];\n  \n  useEffect(() => {\n    const getMovie = async () => {\n      const currentMovie = await getMovieDetails(movieId);\n\n      setMovie(currentMovie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  function historyBack() {\n    history(-1);\n  }\n\n  return (\n    <div className={styles.container}>\n      {!movie ? (\n        <div className={styles.notFound}>Movie is not found</div>\n      ) : (\n        <div>\n          <button type=\"button\" onClick={historyBack} className={styles.button}>Go back</button>\n          <div className={styles.movieContainer}>\n            <div className={styles.movieImg}>\n              <img\n                src={\n                  movie.poster_path\n                    ? IMAGE_URL + movie.poster_path\n                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                }\n                alt={movie.title}\n                widht=\"\"\n                height=\"\"\n              />\n            </div>\n\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {`${(movie.vote_average * 10).toFixed(2)}`}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            </div>\n          </div>\n        </div>\n      )}\n      <hr />\n      <p>Additional information</p>\n      <nav>\n        <NavLink\n          to={{ pathname: `${url}/cast`  }}\n          className={styles.link}\n          state={{location}} replace\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to={{ pathname: `${url}/reviews`, }}\n          className={styles.link}\n          state={{location}} replace\n        >\n          Reviews\n        </NavLink>\n      </nav>\n      <Outlet />  \n    </div>\n  );\n}\n\nexport default MovieDetails ;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8663fb316a268bb124c73bebcd8bdf78';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async (stringToSearch) => {\n    const query = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieDetails = async (movieId) => {\n    const query = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(query);\n    return movie;\n  };\n  \n  export const getTrendingMovies = async () => {\n    const query = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieCast = async (movieId) => {\n    const query = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };\n  \n  export const getReviews = async (movieId) => {\n    const query = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };"],"names":["useState","movie","setMovie","movieId","useParams","history","useNavigate","location","useLocation","url","useMatch","pathname","match","useEffect","getMovie","getMovieDetails","currentMovie","className","styles","type","onClick","src","poster_path","IMAGE_URL","alt","title","widht","height","vote_average","toFixed","overview","genres","map","genre","name","join","to","state","replace","axios","API_KEY","searchMovies","stringToSearch","query","movies","data","getTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}