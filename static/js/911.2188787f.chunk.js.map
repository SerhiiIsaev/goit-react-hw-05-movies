{"version":3,"file":"static/js/911.2188787f.chunk.js","mappings":"6OACA,GAAgB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,MAAQ,uB,4CC2FxH,EAtFe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgBN,EAASO,QAAQC,IAAI,SAE9D,GAAIH,EAAc,CAChB,IAAMI,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,IAAaL,GADvB,gBACRM,EADQ,EACRA,QAERZ,EAAUY,GACVd,EAAeQ,GAJC,2CAAH,qDAQfI,GACD,CACF,GAAE,CAACT,EAASO,SAEb,IAAMK,EAAY,mCAAG,WAAMC,GAAN,4EACnBA,EAAEC,kBAEElB,EAAYmB,OAHG,kCAISL,EAAAA,EAAAA,IAAad,GAJtB,gBAITe,EAJS,EAITA,QAERZ,EAAUY,GACVd,EAAe,IAEQ,IAAnBc,EAAQK,QACVC,EAAAA,GAAAA,MAAY,uEAGdf,GAAQ,kBACHF,GADE,IAELO,OAAO,SAAD,OAAWX,MAfF,4CAAH,sDAoBlB,OACE,iCACE,mBAAQsB,UAAWC,EAAAA,UAAnB,UACE,kBAAMD,UAAWC,EAAAA,KAAaC,SAAUR,EAAxC,WACE,kBACES,SAAU,SAAAR,GAAC,OAAIhB,EAAegB,EAAES,OAAOC,MAA5B,EACXL,UAAWC,EAAAA,MACXK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZJ,MAAO3B,KAET,mBAAQ4B,KAAK,SAASN,UAAWC,EAAAA,OAAjC,0BAKJ,wBACCrB,EAAOkB,OAAS,GACflB,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,EAAcC,YAAd,OAEP,eAAaF,GAAIA,EAAjB,UACE,SAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,iBAAgBJ,IACxBK,MAAO,CACLC,KAAM,CACJnC,SAAAA,KALR,UAUE,uBAAI8B,OAXCD,EAFF,QAqBlB,C,sNCxFDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZ5B,EAAY,mCAAG,WAAO6B,GAAP,kFAClBC,EADkB,+BACcH,EADd,4DACyEE,GADzE,SAEOH,EAAAA,EAAAA,IAAUI,GAFjB,uBAEV1C,EAFU,EAEhB2C,KAFgB,kBAGjB3C,GAHiB,2CAAH,sDAMV4C,EAAe,mCAAG,WAAOC,GAAP,kFACvBH,EADuB,gBACNG,EADM,qBACcN,EADd,4BAECD,EAAAA,EAAAA,IAAUI,GAFX,uBAEfI,EAFe,EAErBH,KAFqB,kBAGtBG,GAHsB,2CAAH,sDAMfC,EAAiB,mCAAG,+FACzBL,EADyB,qCACaH,GADb,SAEAD,EAAAA,EAAAA,IAAUI,GAFV,uBAEjB1C,EAFiB,EAEvB2C,KAFuB,kBAGxB3C,GAHwB,2CAAH,qDAMjBgD,EAAY,mCAAG,WAAOH,GAAP,kFACpBH,EADoB,gBACHG,EADG,4BACwBN,EADxB,4BAEHD,EAAAA,EAAAA,IAAUI,GAFP,uBAElBC,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZM,EAAU,mCAAG,WAAOJ,GAAP,kFAClBH,EADkB,gBACDG,EADC,4BAC0BN,EAD1B,4BAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","utils/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__gVl+9\",\"button\":\"Movies_button__sRc5b\",\"btnLabel\":\"Movies_btnLabel__az29g\",\"input\":\"Movies_input__mpzwV\"};","import { toast } from 'react-toastify';\nimport styles from './Movies.module.css'\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from '../../utils/API';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieToFind, setMovieToFind] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useNavigate();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get('query');\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setMovieToFind(searchString);\n\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (movieToFind.trim()) {\n      const { results } = await searchMovies(movieToFind);\n\n      setMovies(results);\n      setMovieToFind('');\n\n      if (results.length === 0) {\n        toast.error('We did not found anything! Please change your request and try again');\n      }\n\n      history({\n        ...location,\n        search: `query=${movieToFind}`,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header className={styles.searchbar}>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <input\n            onChange={e => setMovieToFind(e.target.value)}\n            className={styles.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={movieToFind}\n          />\n          <button type=\"submit\" className={styles.button}>\n          search\n          </button>\n        </form>\n      </header>\n      <ul>\n      {movies.length > 0 &&\n        movies.map(({ id, title, poster_path }) => (\n         \n            <li key={id} id={id}>\n              <Link\n                to={{\n                  pathname: `/movies/${`${id}`}`,\n                  state: {\n                    from: {\n                      location,\n                    },\n                  },\n                }}\n              >\n                <p>{title}</p>\n              </Link>\n            </li>\n          \n        ))}\n        </ul>\n    </>\n  );\n};\n\nexport default Movies ;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8663fb316a268bb124c73bebcd8bdf78';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async (stringToSearch) => {\n    const query = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieDetails = async (movieId) => {\n    const query = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(query);\n    return movie;\n  };\n  \n  export const getTrendingMovies = async () => {\n    const query = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieCast = async (movieId) => {\n    const query = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };\n  \n  export const getReviews = async (movieId) => {\n    const query = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };"],"names":["useState","movieToFind","setMovieToFind","movies","setMovies","location","useLocation","history","useNavigate","useEffect","searchString","URLSearchParams","search","get","getMovies","searchMovies","results","handleSubmit","e","preventDefault","trim","length","toast","className","styles","onSubmit","onChange","target","value","type","autoComplete","autoFocus","placeholder","map","id","title","poster_path","to","pathname","state","from","axios","API_KEY","IMAGE_URL","stringToSearch","query","data","getMovieDetails","movieId","movie","getTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}