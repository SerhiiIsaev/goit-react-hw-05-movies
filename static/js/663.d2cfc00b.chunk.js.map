{"version":3,"file":"static/js/663.d2cfc00b.chunk.js","mappings":"yNAoCA,UAhCmB,WACjB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACYC,EAAAA,EAAAA,IAAWJ,GADvB,gBACNK,EADM,EACNA,QACRN,EAAWM,GAFG,2CAAH,qDAIbF,GACD,GAAE,CAACH,KAGF,yBACGF,EAAQQ,OAAS,GAChB,+BACE,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADE,SASjB,qEAIP,C,sNChCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZC,EAAY,mCAAG,WAAOC,GAAP,kFAClBC,EADkB,+BACcJ,EADd,4DACyEG,GADzE,SAEOJ,EAAAA,EAAAA,IAAUK,GAFjB,uBAEVC,EAFU,EAEhBC,KAFgB,kBAGjBD,GAHiB,2CAAH,sDAMVE,EAAe,mCAAG,WAAOnB,GAAP,kFACvBgB,EADuB,gBACNhB,EADM,qBACcY,EADd,4BAECD,EAAAA,EAAAA,IAAUK,GAFX,uBAEfI,EAFe,EAErBF,KAFqB,kBAGtBE,GAHsB,2CAAH,sDAMfC,EAAiB,mCAAG,+FACzBL,EADyB,qCACaJ,GADb,SAEAD,EAAAA,EAAAA,IAAUK,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,qDAMjBK,EAAY,mCAAG,WAAOtB,GAAP,kFACpBgB,EADoB,gBACHhB,EADG,4BACwBY,EADxB,4BAEHD,EAAAA,EAAAA,IAAUK,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZd,EAAU,mCAAG,WAAOJ,GAAP,kFAClBgB,EADkB,gBACDhB,EADC,4BAC0BY,EAD1B,4BAEDD,EAAAA,EAAAA,IAAUK,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["Pages/MovieReview/MovieReview.jsx","utils/API.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport { getReviews } from '../../utils/API';\n\nconst MovieReview =()=> {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { results } = await getReviews(movieId);\n      setReviews(results);\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n\nexport default MovieReview","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8663fb316a268bb124c73bebcd8bdf78';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async (stringToSearch) => {\n    const query = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieDetails = async (movieId) => {\n    const query = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(query);\n    return movie;\n  };\n  \n  export const getTrendingMovies = async () => {\n    const query = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(query);\n    return movies;\n  };\n  \n  export const getMovieCast = async (movieId) => {\n    const query = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };\n  \n  export const getReviews = async (movieId) => {\n    const query = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(query);\n    return data;\n  };"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getCast","getReviews","results","length","map","id","author","content","axios","API_KEY","IMAGE_URL","searchMovies","stringToSearch","query","movies","data","getMovieDetails","movie","getTrendingMovies","getMovieCast"],"sourceRoot":""}